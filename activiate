

OS=$(uname)
PYTHON_BIN=$(which python)
OLD_GOPATH=${GOPATH}
GOENV_HOME=${HOME}/.goenv

# *** function define ***
# exit method
function deactiviate {
	export GOPATH=${OLD_GOPATH}
	export PS1=${OLD_PS1}
}

# internal function
function __log {
	echo $(date +"%Y%m%d %H:%M:%S") " $@"
}

function __get_realpath() {
	fpath=$1
	if [[ -z "${fpath}" ]]; then
		fpath=.
	fi
	if [[ -n "${PYTHON_BIN}" ]]; then
		${PYTHON_BIN} -c "import os; print(os.path.realpath(\"${fpath}\"))"
	else
		readlink -f ${fpath}
	fi
}

function __project_gopath() {
	if [[ -z "${WORKDIR}" ]]; then
		__log "WORKDIR=${WORKDIR} invalid"
		exit -1
	fi
	pathmd5=
	if [[ "${OS}" = "Linux" ]]; then
		pathmd5=$(echo ${WORKDIR} | md5sum | awk '{print $1}')
	elif [[ "${OS}" = "Darwin" ]]; then
		pathmd5=$(echo ${WORKDIR} | md5)
	else
		__log "os ${OS} not support"
		exit -1
	fi
	echo ${GOENV_HOME}/${pathmd5:0:16}
}

function __set_goenv {
	mkdir -p ${GOENV_HOME}
	mkdir -p ${GOENV_GOPATH}/src ${GOENV_GOPATH}/bin ${GOENV_GOPATH}/pkg
	echo ${WORKDIR} > ${GOENV_GOPATH}/workdir
	
	# export
	export OLD_PS1=${PS1}
	export PS1="${PS1} ($GOENV_GOPATH) "
	export GOPATH
	export OLD_GOPATH
}

function __get_shell {
	cmd=$(ps -p $$ -o comm=)
	echo ${cmd##-}
}

function __debug {
	__log ${WORKDIR}
	__log ${GOENV_GOPATH}
	__log ${GOPATH}
	__log ${GOENV_SHELL}
}
# *** end function define ***

# *** variable define ***
WORKDIR=$(dirname $(__get_realpath $0))

# private gopath
GOENV_GOPATH=$(__project_gopath)
GOPATH=${GOENV_GOPATH}:${OLD_GOPATH}
GOENV_SHELL=${SHELL:-$(__get_shell)}

# main runtine
case $1 in
	debug) __debug; exit 0; break;;
	*) __set_goenv; break;;
esac